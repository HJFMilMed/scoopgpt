{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "name": {
          "minLength": 1,
          "maxLength": 64,
          "type": "String",
          "metadata": {
              "description": "Name of the the environment which is used to generate a short unique hash used in all resources."
          }
      },
      "location": {
          "allowedValues": [
              "USGovVirginia",
              "USGovTexas",
              "USGovArizona"
          ],
          "type": "String",
          "metadata": {
              "azd": {
                  "type": "location"
              },
              "description": "Primary location for all resources"
          }
      },
      "openAIInstanceName": {
        "defaultValue": "Retrieve from Azure OpenAI Commercial",
        "type": "String"
     },
      "openAIApiVersion": {
          "defaultValue": "2023-03-15-preview",
          "type": "String"
      },
      "chatGptDeploymentName": {
          "defaultValue": "gpt-4-32k",
          "type": "String"
      },
      "chatGptModelName": {
          "defaultValue": "gpt-4-32k",
          "type": "String"
      },
      "chatGptModelVersion": {
          "defaultValue": "0613",
          "type": "String"
      },
      "embeddingDeploymentName": {
          "defaultValue": "text-embedding-ada-002",
          "type": "String"
      },
      "embeddingModelName": {
          "defaultValue": "text-embedding-ada-002",
          "type": "String"
      },
      "formRecognizerSkuName": {
          "defaultValue": "S0",
          "type": "String"
      },
      "searchServiceIndexName": {
          "defaultValue": "azure-chat",
          "type": "String"
      },
      "searchServiceSkuName": {
          "defaultValue": "standard",
          "type": "String"
      },
      "searchServiceAPIVersion": {
          "defaultValue": "2023-07-01-Preview",
          "type": "String"
      },
      "resourceGroupName": {
          "defaultValue": "",
          "type": "String"
      }
  },
  "variables": {
      "resourceToken": "[toLower(uniqueString(subscription().id, parameters('name'), parameters('location')))]",
      "tags": {
          "azd-env-name": "[parameters('name')]"
      }
  },
  "resources": [
      {
          "type": "Microsoft.Resources/resourceGroups",
          "apiVersion": "2021-04-01",
          "name": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('rg-{0}', parameters('name')))]",
          "location": "[parameters('location')]",
          "tags": "[variables('tags')]"
      },
      {
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "2022-09-01",
          "name": "all-resources",
          "dependsOn": [
              "[subscriptionResourceId('Microsoft.Resources/resourceGroups', if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('rg-{0}', parameters('name'))))]"
          ],
          "properties": {
              "expressionEvaluationOptions": {
                  "scope": "inner"
              },
              "mode": "Incremental",
              "parameters": {
                  "name": {
                      "value": "[parameters('name')]"
                  },
                  "resourceToken": {
                      "value": "[variables('resourceToken')]"
                  },
                  "tags": {
                      "value": "[variables('tags')]"
                  },
                  "openAIInstanceName": {
                    "value": "[parameters('openAIInstanceName')]"
                  },
                  "openai_api_version": {
                      "value": "[parameters('openAIApiVersion')]"
                  },
                  "chatGptDeploymentName": {
                      "value": "[parameters('chatGptDeploymentName')]"
                  },
                  "chatGptModelName": {
                      "value": "[parameters('chatGptModelName')]"
                  },
                  "chatGptModelVersion": {
                      "value": "[parameters('chatGptModelVersion')]"
                  },
                  "embeddingDeploymentName": {
                      "value": "[parameters('embeddingDeploymentName')]"
                  },
                  "embeddingModelName": {
                      "value": "[parameters('embeddingModelName')]"
                  },
                  "formRecognizerSkuName": {
                      "value": "[parameters('formRecognizerSkuName')]"
                  },
                  "searchServiceIndexName": {
                      "value": "[parameters('searchServiceIndexName')]"
                  },
                  "searchServiceSkuName": {
                      "value": "[parameters('searchServiceSkuName')]"
                  },
                  "searchServiceAPIVersion": {
                      "value": "[parameters('searchServiceAPIVersion')]"
                  },
                  "location": {
                      "value": "[parameters('location')]"
                  }
              },
              "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                      "_generator": {
                          "name": "bicep",
                          "version": "0.21.1.54444",
                          "templateHash": "3970654296971990539"
                      }
                  },
                  "parameters": {
                      "name": {
                          "type": "string",
                          "defaultValue": "azurechat-demo"
                      },
                      "resourceToken": {
                          "type": "string"
                      },
					  "openAIInstanceName": {
                          "type": "string"
                      },
                      "openai_api_version": {
                          "type": "string"
                      },
                      "chatGptDeploymentName": {
                          "type": "string",
                          "defaultValue": "chat-gpt-35-turbo"
                      },
                      "chatGptModelName": {
                          "type": "string",
                          "defaultValue": "chat-gpt-35-turbo"
                      },
                      "chatGptModelVersion": {
                          "type": "string",
                          "defaultValue": "0613"
                      },
                      "embeddingDeploymentName": {
                          "type": "string",
                          "defaultValue": "text-embedding-ada-002"
                      },
                      "embeddingModelName": {
                          "type": "string",
                          "defaultValue": "text-embedding-ada-002"
                      },
                      "formRecognizerSkuName": {
                          "type": "string",
                          "defaultValue": "S0"
                      },
                      "searchServiceSkuName": {
                          "type": "string",
                          "defaultValue": "standard"
                      },
                      "searchServiceIndexName": {
                          "type": "string",
                          "defaultValue": "azure-chat"
                      },
                      "searchServiceAPIVersion": {
                          "type": "string",
                          "defaultValue": "2023-07-01-Preview"
                      },
                      "location": {
                          "type": "string",
                          "defaultValue": "[resourceGroup().location]"
                      },
                      "nextAuthHash": {
                          "type": "securestring",
                          "defaultValue": "[uniqueString(newGuid())]"
                      },
                      "tags": {
                          "type": "object",
                          "defaultValue": {}
                      }
                  },
                  "variables": {
                      "form_recognizer_name": "[toLower(format('{0}-form-{1}', parameters('name'), parameters('resourceToken')))]",
                      "cosmos_name": "[toLower(format('{0}-cosmos-{1}', parameters('name'), parameters('resourceToken')))]",
                      "search_name": "[toLower(format('{0}search{1}', parameters('name'), parameters('resourceToken')))]",
                      "webapp_name": "[toLower(format('{0}-webapp-{1}', parameters('name'), parameters('resourceToken')))]",
                      "appservice_name": "[toLower(format('{0}-app-{1}', parameters('name'), parameters('resourceToken')))]",
                      "kv_prefix": "[take(parameters('name'), 7)]",
                      "keyVaultName": "[toLower(format('{0}-kv-{1}', variables('kv_prefix'), parameters('resourceToken')))]",
                      "keyVaultSecretsUserRole": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
                      "databaseName": "chat",
                      "containerName": "history"
                  },
                  "resources": [
                      {
                          "type": "Microsoft.KeyVault/vaults/secrets",
                          "apiVersion": "2021-06-01-preview",
                          "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-COSMOSDB-KEY')]",
                          "properties": {
                              "contentType": "text/plain",
                              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_name')), '2023-04-15').secondaryMasterKey]"
                          },
                          "dependsOn": [
                              "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_name'))]",
                              "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                          ]
                      },
                      {
                          "type": "Microsoft.KeyVault/vaults/secrets",
                          "apiVersion": "2021-06-01-preview",
                          "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-OPENAI-API-KEY')]",
                          "properties": {
                              "contentType": "text/plain",
                              "value": "Replace With Key From OpenAI in Azure Commercial"
                          },
                          "dependsOn": [
              "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                          ]
                      },
                      {
                          "type": "Microsoft.KeyVault/vaults/secrets",
                          "apiVersion": "2021-06-01-preview",
                          "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-DOCUMENT-INTELLIGENCE-KEY')]",
                          "properties": {
                              "contentType": "text/plain",
                              "value": "[listKeys(resourceId('Microsoft.CognitiveServices/accounts', variables('form_recognizer_name')), '2023-05-01').key1]"
                          },
                          "dependsOn": [
                              "[resourceId('Microsoft.CognitiveServices/accounts', variables('form_recognizer_name'))]",
                              "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                          ]
                      },
                      {
                          "type": "Microsoft.KeyVault/vaults/secrets",
                          "apiVersion": "2021-06-01-preview",
                          "name": "[format('{0}/{1}', variables('keyVaultName'), 'AZURE-SEARCH-API-KEY')]",
                          "properties": {
                              "contentType": "text/plain",
                              "value": "[listAdminKeys(resourceId('Microsoft.Search/searchServices', variables('search_name')), '2022-09-01').secondaryKey]"
                          },
                          "dependsOn": [
                              "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                              "[resourceId('Microsoft.Search/searchServices', variables('search_name'))]"
                          ]
                      },
                      {
                          "type": "Microsoft.KeyVault/vaults/secrets",
                          "apiVersion": "2021-06-01-preview",
                          "name": "[format('{0}/{1}', variables('keyVaultName'), 'NEXTAUTH-SECRET')]",
                          "properties": {
                              "contentType": "text/plain",
                              "value": "[parameters('nextAuthHash')]"
                          },
                          "dependsOn": [
                              "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
                          ]
                      },
                      {
                          "type": "Microsoft.Web/serverfarms",
                          "apiVersion": "2023-01-01",
                          "name": "[variables('appservice_name')]",
                          "location": "[parameters('location')]",
                          "tags": "[parameters('tags')]",
                          "properties": {
                              "reserved": true
                          },
                          "sku": {
                              "name": "P1v3",
                              "tier": "PremiumV3",
                              "size": "P1v3",
                              "family": "Pv3",
                              "capacity": 1
                          },
                          "kind": "linux"
                      },
                      {
                          "type": "Microsoft.Web/sites",
                          "apiVersion": "2020-06-01",
                          "name": "[variables('webapp_name')]",
                          "location": "[parameters('location')]",
                          "tags": "[union(parameters('tags'), createObject('azd-service-name', 'frontend'))]",
                          "properties": {
                              "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appservice_name'))]",
                              "httpsOnly": true,
                              "siteConfig": {
                                  "linuxFxVersion": "node|18-lts",
                                  "alwaysOn": true,
                                  "appCommandLine": "next start",
                                  "ftpsState": "Disabled",
                                  "minTlsVersion": "1.2",
                                  "appSettings": [
                                      {
                                          "name": "AZURE_COSMOSDB_KEY",
                                          "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-COSMOSDB-KEY')]"
                                      },
                                      {
                                          "name": "OPENAI_API_KEY",
                                          "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-OPENAI-API-KEY')]"
                                      },
                                      {
                                          "name": "AZURE_DOCUMENT_INTELLIGENCE_KEY",
                                          "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-DOCUMENT-INTELLIGENCE-KEY')]"
                                      },
                                      {
                                          "name": "AZURE_SEARCH_API_KEY",
                                          "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'AZURE-SEARCH-API-KEY')]"
                                      },
                                      {
                                          "name": "AZURE_SEARCH_API_VERSION",
                                          "value": "[parameters('searchServiceAPIVersion')]"
                                      },
                                      {
                                          "name": "AZURE_SEARCH_NAME",
                                          "value": "[variables('search_name')]"
                                      },
                                      {
                                          "name": "AZURE_SEARCH_INDEX_NAME",
                                          "value": "[parameters('searchServiceIndexName')]"
                                      },
                  {
                                          "name": "AZURE_SEARCH_URL",
                                          "value": "[format('https://{0}.search.azure.us/', variables('search_name'))]"
                                      },
                                      {
                                          "name": "AZURE_DOCUMENT_INTELLIGENCE_ENDPOINT",
                                          "value": "[format('https://{0}.cognitiveservices.azure.us/', variables('form_recognizer_name'))]"
                                      },
                                      {
                                          "name": "SCM_DO_BUILD_DURING_DEPLOYMENT",
                                          "value": "true"
                                      },
                                      {
                                          "name": "AZURE_COSMOSDB_URI",
                                          "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_name')), '2023-04-15').documentEndpoint]"
                                      },
                                      {
                                          "name": "AZURE_OPENAI_API_INSTANCE_NAME",
                                          "value": "[parameters('openAIInstanceName')]"
                                      },
                                      {
                                          "name": "AZURE_OPENAI_API_DEPLOYMENT_NAME",
                                          "value": "[parameters('chatGptDeploymentName')]"
                                      },
                                      {
                                          "name": "AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME",
                                          "value": "[parameters('embeddingDeploymentName')]"
                                      },
                                      {
                                          "name": "AZURE_OPENAI_API_VERSION",
                                          "value": "[parameters('openai_api_version')]"
                                      },
                                      {
                                          "name": "NEXTAUTH_SECRET",
                                          "value": "[format('@Microsoft.KeyVault(VaultName={0};SecretName={1})', variables('keyVaultName'), 'NEXTAUTH-SECRET')]"
                                      },
                                      {
                                          "name": "NEXTAUTH_URL",
                                          "value": "[format('https://{0}.azurewebsites.us', variables('webapp_name'))]"
                                      }
                                  ]
                              }
                          },
                          "identity": {
                              "type": "SystemAssigned"
                          },
                          "dependsOn": [
                              "[resourceId('Microsoft.Web/serverfarms', variables('appservice_name'))]",
                              "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-COSMOSDB-KEY')]",
                              "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-DOCUMENT-INTELLIGENCE-KEY')]",
                              "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-OPENAI-API-KEY')]",
                              "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'AZURE-SEARCH-API-KEY')]",
                              "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_name'))]",
                              "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                              "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), 'NEXTAUTH-SECRET')]"
                          ]
                      },
                      {
                          "type": "Microsoft.Authorization/roleAssignments",
                          "apiVersion": "2020-04-01-preview",
                          "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('keyVaultName'))]",
                          "name": "[guid(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName')), variables('webapp_name'), variables('keyVaultSecretsUserRole'))]",
                          "properties": {
                              "principalId": "[reference(resourceId('Microsoft.Web/sites', variables('webapp_name')), '2020-06-01', 'full').identity.principalId]",
                              "principalType": "ServicePrincipal",
                              "roleDefinitionId": "[variables('keyVaultSecretsUserRole')]"
                          },
                          "dependsOn": [
                              "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
                              "[resourceId('Microsoft.Web/sites', variables('webapp_name'))]"
                          ]
                      },
                      {
                          "type": "Microsoft.KeyVault/vaults",
                          "apiVersion": "2021-06-01-preview",
                          "name": "[variables('keyVaultName')]",
                          "location": "[parameters('location')]",
                          "properties": {
                              "sku": {
                                  "family": "A",
                                  "name": "standard"
                              },
                              "tenantId": "[subscription().tenantId]",
                              "enableRbacAuthorization": true,
                              "enabledForDeployment": false,
                              "enabledForDiskEncryption": true,
                              "enabledForTemplateDeployment": false
                          }
                      },
                      {
                          "type": "Microsoft.DocumentDB/databaseAccounts",
                          "apiVersion": "2023-04-15",
                          "name": "[variables('cosmos_name')]",
                          "location": "[parameters('location')]",
                          "tags": "[parameters('tags')]",
                          "kind": "GlobalDocumentDB",
                          "properties": {
                              "databaseAccountOfferType": "Standard",
                              "locations": [
                                  {
                                      "locationName": "[parameters('location')]",
                                      "failoverPriority": 0
                                  }
                              ],
                              "disableKeyBasedMetadataWriteAccess": true
                          }
                      },
                      {
                          "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
                          "apiVersion": "2022-05-15",
                          "name": "[format('{0}/{1}', variables('cosmos_name'), variables('databaseName'))]",
                          "properties": {
                              "resource": {
                                  "id": "[variables('databaseName')]"
                              }
                          },
                          "dependsOn": [
                              "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmos_name'))]"
                          ]
                      },
                      {
                          "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                          "apiVersion": "2022-05-15",
                          "name": "[format('{0}/{1}', format('{0}/{1}', variables('cosmos_name'), variables('databaseName')), variables('containerName'))]",
                          "properties": {
                              "resource": {
                                  "id": "[variables('containerName')]",
                                  "partitionKey": {
                                      "paths": [
                                          "/userId"
                                      ],
                                      "kind": "Hash"
                                  },
                                  "defaultTtl": 86400
                              }
                          },
                          "dependsOn": [
                              "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/{1}', variables('cosmos_name'), variables('databaseName')), '/')[0], split(format('{0}/{1}', variables('cosmos_name'), variables('databaseName')), '/')[1])]"
                          ]
                      },
                      {
                          "type": "Microsoft.CognitiveServices/accounts",
                          "apiVersion": "2023-05-01",
                          "name": "[variables('form_recognizer_name')]",
                          "location": "[parameters('location')]",
                          "tags": "[parameters('tags')]",
                          "kind": "FormRecognizer",
                          "properties": {
                              "customSubDomainName": "[variables('form_recognizer_name')]",
                              "publicNetworkAccess": "Enabled"
                          },
                          "sku": {
                              "name": "[parameters('formRecognizerSkuName')]"
                          }
                      },
                      {
                          "type": "Microsoft.Search/searchServices",
                          "apiVersion": "2022-09-01",
                          "name": "[variables('search_name')]",
                          "location": "[parameters('location')]",
                          "tags": "[parameters('tags')]",
                          "properties": {
                              "partitionCount": 1,
                              "publicNetworkAccess": "enabled",
                              "replicaCount": 1
                          },
                          "sku": {
                              "name": "[parameters('searchServiceSkuName')]"
                          }
                      }
                  ],
                  "outputs": {
                      "url": {
                          "type": "string",
                          "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', variables('webapp_name')), '2020-06-01').defaultHostName)]"
                      }
                  }
              }
          },
          "resourceGroup": "[if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('rg-{0}', parameters('name')))]"
      }
  ],
  "outputs": {
      "APP_URL": {
          "type": "String",
          "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, if(not(empty(parameters('resourceGroupName'))), parameters('resourceGroupName'), format('rg-{0}', parameters('name')))), 'Microsoft.Resources/deployments', 'all-resources'), '2022-09-01').outputs.url.value]"
      },
      "AZURE_LOCATION": {
          "type": "String",
          "value": "[parameters('location')]"
      },
      "AZURE_TENANT_ID": {
          "type": "String",
          "value": "[tenant().tenantId]"
      }
  }
}